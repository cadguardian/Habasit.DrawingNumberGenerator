@page "/drawing-number-generator"
@using DNG.Library.Data
@using DNG.Library.Models
@using Microsoft.AspNetCore.Components.Forms
@using global::DrawingNumberGenerator.Library.Models
@inject IJSRuntime JSRuntime

<h1 class="text-center">Drawing Number Generator</h1>

<DrawingNumberGeneratorInstructions/>

<EditForm Model="@userInput" OnValidSubmit="GenerateDrawingNumber">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-container">
        <h2>Belt Information Section</h2>

        <div class="form-group">
             <label for="beltType" class="form-label">Belt Type</label>
            <select id="beltType" @ref="beltTypeDropdownRef" @onkeydown="@(e => HandleKeyDown(e, beltTypeDropdownRef))"
                    @onblur="@(e => HandleBlur(beltTypeDropdownRef))" aria-required="true"
                    aria-describedby="beltTypeHelp" @bind="userInput.BeltType" class="form-select" required autofocus>
                <option value="" disabled selected>Select a belt type...</option>
                @foreach (var type in beltTypes)
                {
                    <option value="@type">@type</option>
                }
            </select>
            @* <div id="beltTypeHelp" class="form-text text-muted">Please select the belt type.</div> *@
            <ValidationMessage For="@(() => userInput.BeltType)" class="text-danger" />
        </div>

        <div class="form-group">
            <label for="beltSeries">Belt Series</label>
            <select id="beltSeries" @ref="beltSeriesDropdownRef" @onkeydown="@(e => HandleKeyDown(e, beltSeriesDropdownRef))"
                    @onblur="@(e => HandleBlur(beltSeriesDropdownRef))" aria-required="true"
                    aria-describedby="beltSeriesHelp" @bind="userInput.BeltSeries" class="form-control" required>
                <option value="" disabled selected>Select a belt series...</option>
                @foreach (var series in beltSeries)
                {
                    <option value="@series">@series</option>
                }
            </select>
            @* <small id="beltSeriesHelp" class="form-text text-muted">Please select the belt series.</small> *@
            <ValidationMessage For="@(() => userInput.BeltSeries)" />
        </div>

        <div class="form-group">
            <label for="color">Color</label>
            <select id="color" @ref="colorDropdownRef" @onkeydown="@(e => HandleKeyDown(e, colorDropdownRef))"
                    @onblur="@(e => HandleBlur(colorDropdownRef))" aria-required="true"
                    aria-describedby="colorHelp" @bind="userInput.Color" class="form-control" required>
                <option value="" disabled selected>Select a color...</option>
                @foreach (var color in colors)
                {
                    <option value="@color">@color</option>
                }
            </select>
            @* <small id="colorHelp" class="form-text text-muted">Please select the color.</small> *@
            <ValidationMessage For="@(() => userInput.Color)" />
        </div>

        <div class="form-group">
            <label for="material">Material</label>
            <select id="material" @ref="materialDropdownRef" @onkeydown="@(e => HandleKeyDown(e, materialDropdownRef))"
                    @onblur="@(e => HandleBlur(materialDropdownRef))" aria-required="true"
                    aria-describedby="materialHelp" @bind="userInput.Material" class="form-control" required>
                <option value="" disabled selected>Select a material...</option>
                @foreach (var material in materials)
                {
                    <option value="@material">@material</option>
                }
            </select>
            @* <small id="materialHelp" class="form-text text-muted">Please select the material.</small> *@
            <ValidationMessage For="@(() => userInput.Material)" />
        </div>

        <div class="form-group">
            <label for="adderMaterial">Adder Material</label>
            <select id="adderMaterial" @ref="adderMaterialDropdownRef" @onkeydown="@(e => HandleKeyDown(e, adderMaterialDropdownRef))"
                    @onblur="@(e => HandleBlur(adderMaterialDropdownRef))" aria-required="true"
                    aria-describedby="adderMaterialHelp" @bind="userInput.AdderMaterial" class="form-control" required>
                <option value="" disabled selected>Select a adder material...</option>
                @foreach (var adder in adderMaterials)
                {
                    <option value="@adder">@adder</option>
                }
            </select>
            @* <small id="adderMaterialHelp" class="form-text text-muted">Please select the adder material.</small> *@
            <ValidationMessage For="@(() => userInput.AdderMaterial)" />
        </div>

        <div class="form-group">
            <label for="rodMaterial">Rod Material</label>
            <select id="rodMaterial" @ref="rodMaterialDropdownRef" @onkeydown="@(e => HandleKeyDown(e, rodMaterialDropdownRef))"
                    @onblur="@(e => HandleBlur(rodMaterialDropdownRef))" aria-required="true"
                    aria-describedby="rodMaterialHelp" @bind="userInput.RodMaterial" class="form-control" required>
                <option value="" disabled selected>Select a rod material...</option>
                @foreach (var rod in rodMaterials)
                {
                    <option value="@rod">@rod</option>
                }
            </select>
            @* <small id="rodMaterialHelp" class="form-text text-muted">Please select the rod material.</small> *@
            <ValidationMessage For="@(() => userInput.RodMaterial)" />
        </div>

        <div class="form-group">
            <label for="beltWidth">Belt Width (inches)</label>
            <InputNumber id="beltWidth" aria-required="true" aria-describedby="beltWidthHelp" @bind-Value="userInput.BeltWidth"
                         Min="1" Max="999" class="form-control" required />
            @* <small id="beltWidthHelp" class="form-text text-muted">Please input the belt width in inches.</small> *@
            <ValidationMessage For="@(() => userInput.BeltWidth)" />
        </div>


        <h2>Flights/Rollers/Grip Section</h2>

        <div class="form-check form-switch">
    <input class="form-check-input" type="checkbox" id="noFlightsSwitch" @bind="NoFlightsRollerOrGrips" />
    <label class="form-check-label" for="noFlightsSwitch">No Flights Roller Or Grips</label>
</div>

        <div class="form-group">
            <label for="flightsRollersGrip">Flights/Rollers/Grip</label>
            <select id="flightsRollersGrip" disabled="@NoFlightsRollerOrGrips" @ref="flightsRollersGripDropdownRef" @onkeydown="@(e => HandleKeyDown(e, flightsRollersGripDropdownRef))"
                    @onblur="@(e => HandleBlur(flightsRollersGripDropdownRef))" aria-required="true"
                    aria-describedby="flightsRollersGripHelp" @bind="userInput.FlightsRollersGrip" class="form-control">
                <option value="" disabled selected>Select a flight, roller or grip...</option>
                @foreach (var type in flightsRollersGrips)
                {
                    <option value="@type">@type</option>
                }
            </select>
            @* <small id="flightsRollersGripHelp" class="form-text text-muted">Please select the type of flights, rollers, or grip.</small> *@
            <ValidationMessage For="@(() => userInput.FlightsRollersGrip)" />
        </div>

        <div class="form-group">
            <label for="qtyRollersAcrossWidth">Qty. Rollers Across Width</label>
            <InputNumber id="qtyRollersAcrossWidth" disabled aria-required="true" aria-describedby="qtyRollersAcrossWidthHelp"
                         @bind-Value="userInput.QtyRollersAcrossWidth" Min="1" Max="20" class="form-control" />
            <small id="qtyRollersAcrossWidthHelp" class="form-text text-muted">Field disabled for quantity of rollers across the width until further notice.</small>
            <ValidationMessage For="@(() => userInput.QtyRollersAcrossWidth)" />
        </div>

        <div class="form-group">
            <label for="frgCenters">F/R/G Centers (inches)</label>
            <InputNumber id="frgCenters" disabled aria-required="true" aria-describedby="frgCentersHelp"
                         @bind-Value="userInput.FRGCenters" Min="1" Max="100" class="form-control" />
            <small id="frgCentersHelp" class="form-text text-muted">Field disabled for the F/R/G centers in inches until further notice.</small>
            <ValidationMessage For="@(() => userInput.FRGCenters)" />
        </div>

        <h2>Belt Accessories Section</h2>

        <div class="form-group">
            <label for="beltAccessories">Belt Accessories</label>
            <select id="beltAccessories" @ref="beltAccessoriesDropdownRef" @onkeydown="@(e => HandleKeyDown(e, beltAccessoriesDropdownRef))"
                    @onblur="@(e => HandleBlur(beltAccessoriesDropdownRef))" aria-required="true"
                    aria-describedby="beltAccessoriesHelp" @bind="userInput.BeltAccessories" class="form-control" required>
                <option value="" disabled selected>Select a belt accessory...</option>
                @foreach (var type in beltAccessories)
                {
                    <option value="@type">@type</option>
                }
            </select>
            @* <small id="beltAccessoriesHelp" class="form-text text-muted">Please select the belt accessories.</small> *@
            <ValidationMessage For="@(() => userInput.BeltAccessories)" />
        </div>

        <div class="form-group">
            <label for="frictionAntiStatic">Friction/Anti Static</label>
            <select id="frictionAntiStatic" @ref="frictionAntiStaticDropdownRef" @onkeydown="@(e => HandleKeyDown(e, frictionAntiStaticDropdownRef))"
                    @onblur="@(e => HandleBlur(frictionAntiStaticDropdownRef))" aria-required="true"
                    aria-describedby="frictionAntiStaticHelp" @bind="userInput.FrictionAntiStatic" class="form-control" required>
                <option value="" disabled selected>Select friction or anti-static ...</option>
                @foreach (var type in frictionAntiStatics)
                {
                    <option value="@type">@type</option>
                }
            </select>
            @* <small id="frictionAntiStaticHelp" class="form-text text-muted">Please select the friction/anti-static material.</small> *@
            <ValidationMessage For="@(() => userInput.FrictionAntiStatic)" />
        </div>

        <div class="form-group">
            <label for="sidePLLaneDV">Side-PL/Lane-DV</label>
            <select id="sidePLLaneDV" @ref="sidePLLaneDVDropdownRef" @onkeydown="@(e => HandleKeyDown(e, sidePLLaneDVDropdownRef))"
                    @onblur="@(e => HandleBlur(sidePLLaneDVDropdownRef))" aria-required="true"
                    aria-describedby="sidePLLaneDVHelp" @bind="userInput.SidePLLaneDV" class="form-control" required>
                <option value="" disabled selected>Select Side-PL/Lane-DV...</option>
                @foreach (var type in sidePLLaneDVs)
                {
                    <option value="@type">@type</option>
                }
            </select>
            @* <small id="sidePLLaneDVHelp" class="form-text text-muted">Please select the Side-PL/Lane-DV.</small> *@
            <ValidationMessage For="@(() => userInput.SidePLLaneDV)" />
        </div>

        <h2>Unique Identification Section</h2>

        <div class="form-group">
            <label for="uniqueIdentification">Unique Identification</label>
            <InputText id="uniqueIdentification" aria-required="true" aria-describedby="uniqueIdentificationHelp"
                       @bind-Value="userInput.UniqueIdentification" class="form-control"
                       minlength="1" maxlength="2" required />
            @* <small id="uniqueIdentificationHelp" class="form-text text-muted">Please input the unique identification (1-2 characters).</small> *@
            <ValidationMessage For="@(() => userInput.UniqueIdentification)" />
        </div>

        <div class="form-group">
            <label for="indentCode">Indent Code</label>
            <select id="indentCode" @ref="indentCodeDropdownRef" @onkeydown="@(e => HandleKeyDown(e, indentCodeDropdownRef))"
                    @onblur="@(e => HandleBlur(indentCodeDropdownRef))" aria-required="true"
                    aria-describedby="indentCodeHelp" @bind="userInput.IndentCode" class="form-control" required>
                <option value="" disabled selected>Select Indent...</option>
                @foreach (var type in indents)
                {
                    <option value="@type">@type</option>
                }
            </select>
            @* <small id="sidePLLaneDVHelp" class="form-text text-muted">Please select the indent.</small> *@
            <ValidationMessage For="@(() => userInput.IndentCode)" />
        </div>

        <button type="submit" disabled="@isProcessing" class="btn btn-primary btn-block" aria-label="Generate Drawing Number">Generate Drawing Number</button>

        <div class="animated-number copy-button" @onclick="CopyDrawingNumberToClipboard" id="drawingNumber">@DrawingNumber.GetDrawingNumber(NoFlightsRollerOrGrips)</div>
        <div id="copyDialog" class="dialog" style="display: none;">Drawing number has been copied to clipboard!</div>
<hr>
        <ConsoleLogger DrawingNumber="DrawingNumber" />
        </div>

    
</EditForm>


