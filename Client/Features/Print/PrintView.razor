@page "/project-summary"
@using DNG.Library.Models;
@inject IImageGalleryService ImageService
@inject HttpClient Http
@inject IJSRuntime JS
@inject IStateContainer State

<div class="container-fluid">
    <div class="summary-sheet print-mode" style="display: block;" id="summarySheet">
        <div class="text-center">
            <h3 class="display-6">Special Build - Plastic Modular Belt</h3>
            <div class="text-muted">Drawing Request - @State.DrawingRequest.GetProjectFolderName()</div>
            <p class="no-print">Printing this page will print the information below to track drawing.</p>
        </div>
        
        <div class="row">
            <div class="col-md-6 col-sm-6">
                <div class="card mb-3">
                    <h4 class="card-header small d-flex justify-content-between align-items-center"><i class="fa-solid fa-user"></i> CSR Drawing Request</h4>
                    <div class="card-body p-0">
                        @if (!string.IsNullOrWhiteSpace(State.DrawingRequest.StructuredText))
                        {
                            <div class="alert alert-success">
                                <p>@State.DrawingRequest.StructuredText</p>
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-danger">
                                <p>Structured text is currently empty. Please complete the drawing request form to display CSR request (structured text).</p>
                            </div>
                        }
                    </div>
                  
                </div>
                <div class="card mb-3">
                    <h4 class="card-header d-flex small justify-content-between align-items-center"><i class="fa-solid fa-copy"></i> Title Block Information</h4>
                    <div class="card-body">
                        <div>
                            <strong>Folder Name: </strong>
                            @if (!string.IsNullOrWhiteSpace(State.DrawingRequest.GetProjectFolderName()))
                            {
                                @State.DrawingRequest.GetProjectFolderName()
                            }
                            else
                            {
                                <span class="text-danger">❌</span>
                            }
                        </div>

                        <div><strong>Rev Number:</strong> A</div>

                        <div><strong>Drawn Date:</strong> @DateTime.Now.ToString("MM/dd/yyyy")</div>

                        <div><strong>Scale:</strong> N/A</div>

                        <div>
                            <strong>Drawn By:</strong> T SMITH
                        </div>

                        <div>
                            <strong>Job Number: </strong>
                            @if (!string.IsNullOrWhiteSpace(State.DrawingRequest.GetJobNumber()))
                            {
                                @State.DrawingRequest.GetJobNumber()
                            }
                            else
                            {
                                <span class="text-danger">❌</span>
                            }
                        </div>

                        <div>
                            <strong>Drawing Number: </strong>
                            @if (!string.IsNullOrWhiteSpace(State.DrawingNumber.GetDrawingNumber()))
                            {
                                @State.DrawingNumber.GetDrawingNumber()
                            }
                            else
                            {
                                <span class="text-danger">❌</span>
                            }
                        </div>
                    </div>
                </div>

                <div>
                    <div class="card mb-3">
                        <h4 class="card-header d-flex small justify-content-between align-items-center"><i class="fa-solid fa-compass-drafting"></i> CAD Template</h4>
                        <div class="card-body">
                            @if (!string.IsNullOrWhiteSpace(State.DrawingRequest.CadTemplatePath))
                            {
                                <a href="@State.DrawingRequest.CadTemplatePath" target="_blank">@State.DrawingRequest.CadTemplatePath</a>
                            }
                            else
                            {
                                <div class="alert alert-danger">
                                <p class="text-danger">No CAD Template available. Please complete the drawing request.</p></div>
                            }
                        </div>
                    </div>
                    <div class="card mb-3">
                        <h4 class="card-header d-flex small justify-content-between align-items-center"><i class="fa-solid fa-retweet"></i> Reference Drawing</h4>
                        <div class="card-body">
                            @if (!string.IsNullOrWhiteSpace(State.DrawingRequest.ReferenceDrawingPath))
                            {
                                <a href="@State.DrawingRequest.ReferenceDrawingPath" target="_blank">@State.DrawingRequest.ReferenceDrawingPath</a>
                            }
                            else
                            {
                                <div class="alert alert-danger">
                                <p class="text-danger">No Reference Drawing available. Please complete the drawing request and configure the query string for wider results.</p>
                                </div>
                            }
                        </div>
                    </div>
                    <div class="card">
                        <h4 class="card-header d-flex small justify-content-between align-items-center"><i class="fa-regular fa-note-sticky"></i> Notes</h4>
                        <div class="card-body">
                            <textarea class="form-control" rows="5" placeholder="Enter notes here..."></textarea>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-6 col-sm-6">
                <div class="card mb-3">
                    <h4 class="card-header d-flex small justify-content-between align-items-center"><i class="fa-regular fa-image"></i> Thumbnail</h4>
                    <div class="card-body d-flex align-items-center justify-content-center p-0">
                        @* <img src="images/belts/@GetThumbnailImage()" alt="Belt Thumbnail" class="img-fluid p-0 m-0" /> *@

                        @if (!string.IsNullOrWhiteSpace(State.DrawingRequest.ThumbnailImageFilePath))
                        {
                            <img src="@("images/belts/" + State.DrawingRequest.ThumbnailImageFilePath)" alt="Select belt series to see image." class="img-fluid p-0 m-0" />
                        }
                        else
                        {
                            <div class="alert alert-danger">
                            <p class="text-danger">No thumbnail is available. Please select a belt series.</p>
                            </div>
                        }


                    </div>
                    <span class="small text-center">@State.DrawingRequest.ThumbnailImageFilePath</span>
                </div>
                <DrawingDetailsTable />
            </div>
        </div>
    </div>

    <div class="card mb-3 mt-4">
        <h4 class="card-header d-flex small justify-content-between align-items-center"><i class="fa-solid fa-list"></i> Available Parts</h4>
        <div class="card-body d-flex align-items-center  p-0">
            <div class="table-responsive">
                <table class="table table-sm table-bordered">
                    <thead class="table-light">
                        <tr>
                            <th>Part Name</th>
                            <th>Description</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (State.DrawingRequest.PartsList != null && State.DrawingRequest.PartsList.Any())
                        {
                            @foreach (var part in State.DrawingRequest.PartsList)
                            {
                                <tr>
                                    <td class="small">@part.Key</td>
                                    <td class="small">@part.Value</td>
                                </tr>
                            }
                        }
                        else
                        {
                            <tr>
                                <td colspan="3" class="text-center text-danger">
                                    <div class="alert alert-danger">
                                    No parts available. Please complete the drawing request.
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@code {
    private List<string> imageFiles = new();

    private string searchQuery = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        imageFiles = await ImageService.LoadImageFilesAsync();
    }

    private IEnumerable<string> FilteredImages => ImageService.FilterImages(imageFiles, searchQuery);

    private void ApplyFilters()
    {
        // Update searchQuery based on filter criteria, for example:
        searchQuery = !string.IsNullOrWhiteSpace(State.DrawingRequest.BeltType) ? State.DrawingRequest.BeltSeries : string.Empty;
    }

    private string GetThumbnailImage() => FilteredImages.FirstOrDefault()!;
    
    protected override void OnInitialized()
    {
        State.OnStateChange += StateHasChanged;
    }

    public void Dispose()
    {
        State.OnStateChange -= StateHasChanged;
    }
}
