@page "/image-gallery"
@inject IImageGalleryService ImageService
@inject IStateContainer State



<div class="container-fluid no-print my-3">
    <div class="text-center alert alert-warning no-print">
        Select a belt series and related image for accurate configuration.
    </div>

    <div class="card">
        <!-- Header Section -->
        <div class="d-flex justify-content-between align-items-center card-header">
            @if (imageFiles != null)
            {
                <small class="text-muted">
                    <span>@State.DrawingNumber.BeltSeriesCode: @FilteredImages.ToList().Count Versions</span>
                </small>
            }
        </div>

        <!-- Gallery Display -->
        @if (string.IsNullOrEmpty(State.DrawingRequest.ThumbnailImageFilePath) || string.IsNullOrEmpty(State.DrawingRequest.BeltSeries))
        {

            @if (string.IsNullOrEmpty(State.DrawingRequest.BeltSeries))
            {
                <div class="card-body">
                    <div class="alert alert-danger">
                        <p class="text-danger">Select your belt series to identify belt by selecting an image.</p>
                    </div>
                    </div>
            }
            else
            {
                <div class="gallery-container">
                    <div class="row card-body">
                        @foreach (var image in FilteredImages)
                        {
                            <div class="col-6 col-sm-4 col-md-3 col-lg-2 mb-3">
                                <div class="h-100" @onclick="() => ShowImage(image)">
                                    <img src="images/belts/@image" class="card-img-top" alt="@ImageService.FormatImageName(image)" />
                                    <div class="card-body p-1">
                                        <p class="card-text text-center small">@ImageService.FormatImageName(image)</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        }
            
        else
        {
            <!-- Full Image View -->
            <div class="text-center">
                <img src="images/belts/@State.DrawingRequest.ThumbnailImageFilePath" class="img-fluid" alt="@ImageService.FormatImageName(State.DrawingRequest.ThumbnailImageFilePath)" style="max-height: 70vh;" />
                <div class="p-0 alert alert-secondary mt-3">@ImageService.FormatImageName(State.DrawingRequest.ThumbnailImageFilePath)</div>
                <button class="btn btn-sm btn-outline-secondary mb-3" @onclick="ClearSelectedImage">Change Image</button>
            </div>
        }
    </div>
</div>

@code {
    private List<string> imageFiles = new();
    private bool isSearchMode = false;

    protected override async Task OnInitializedAsync()
    {
        State.OnStateChange += StateHasChanged;
        imageFiles = await ImageService.LoadImageFilesAsync();
    }

    public void Dispose()
    {
        State.OnStateChange -= StateHasChanged;
    }

    private IEnumerable<string> FilteredImages => ImageService.FilterImages(imageFiles, State.DrawingRequest.BeltSeries);

    private void ShowImage(string image)
    {
        UpdateThumbnailImage(image);
    }

    private void ClearSelectedImage()
    {
        UpdateThumbnailImage(null);
    }

    private void UpdateThumbnailImage(string? image)
    {
        State.UpdateProperty(State.DrawingRequest, dr => dr.ThumbnailImageFilePath = image);
    }

    private void OnSearch()
    {
        isSearchMode = !string.IsNullOrWhiteSpace(State.DrawingRequest.BeltSeries);
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            OnSearch();
        }
    }

    private void ClearSearch()
    {
        isSearchMode = false;
    }
}


<style>
    .gallery-container {
        max-height: 40vh;
        overflow-y: auto;
        padding-right: 15px;
    }

    .card-img-top {
        object-fit: contain;
        max-height: 150px;
        width: 100%;
    }

    .image-card {
        cursor: pointer;
    }

    .gallery-container::-webkit-scrollbar {
        width: 8px;
    }

    .gallery-container::-webkit-scrollbar-thumb {
        background-color: #ccc;
        border-radius: 4px;
    }

    .gallery-container::-webkit-scrollbar-track {
        background-color: #f1f1f1;
    }
</style>
