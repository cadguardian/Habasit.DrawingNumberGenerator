@page "/title-block-generator"
@inject IStateContainer State
@inject IJSRuntime JS
@inject ITitleBlockService TitleBlockService

<label class="text-center alert alert-warning my-2 no-print">
    Effortlessly generate and copy title block details for precise and efficient CAD documentation.
</label>

<div class="container-fluid no-print my-2">
    <div class="card">
        <div class="d-flex justify-content-between align-items-center card-header">
            <h4 class="small"><i class="fa-solid fa-copy"></i> Title Block Generator</h4>
        </div>

        <!-- Instructions -->
        <div class="alert alert-secondary p-3 p-1 mb-2" style="font-size: 0.8rem;">
            Click the copy button to copy any value to the clipboard.
        </div>

        <!-- Title Block Fields Table -->
        <table class="table table-sm">
            <tbody>
                @foreach (var field in titleBlockFields)
                {
                    <tr>
                        <th>@field.Label</th>
                        <td>
                            <input type="text" class="form-control form-control-sm" @bind="field.Value" />
                        </td>
                        <td>
                            <button class="btn btn-outline-secondary btn-sm" @onclick="() => CopyToClipboard(field.Value)">
                                <i class="bi bi-clipboard"></i> Copy
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<TitleBlockField>? titleBlockFields;

    protected override void OnInitialized()
    {
        State.OnStateChange += StateChangedHandler;
        LoadValues(); // Initial load
    }

    private void StateChangedHandler()
    {
        LoadValues(); // Reload values on state change
        StateHasChanged(); // Trigger UI re-render
    }

    public void Dispose()
    {
        State.OnStateChange -= StateChangedHandler;
    }

    private void LoadValues()
    {
        // Retrieve updated values from the TitleBlockService
        titleBlockFields = new List<TitleBlockField>
        {
            new("Folder Name", TitleBlockService.GetProjectFolderName(
                TitleBlockService.GetJobNumber(State.DrawingRequest),
                State.DrawingNumber
            )),
            new("Rev Number", "A"),
            new("Drawn Date", TitleBlockService.GetDrawnDate()),
            new("Scale", ""),
            new("Drawn By", "T Smith"),
            new("Job Number", TitleBlockService.GetJobNumber(State.DrawingRequest)),
            new("Drawing Number", State.DrawingNumber.DrawingCode),
            new("Title Line 1", TitleBlockService.GetTitleLine1(State.DrawingRequest, State.DrawingNumber)),
            new("Title Line 2", TitleBlockService.GetTitleLine2(State.DrawingRequest)),
            new("Title Line 3", TitleBlockService.GetTitleLine3(State.DrawingRequest))
        };
    }

    private void CopyToClipboard(string text)
    {
        JS.InvokeVoidAsync("navigator.clipboard.writeText", text);
    }

    private class TitleBlockField
    {
        public TitleBlockField(string label, string value)
        {
            Label = label;
            Value = value;
        }

        public string Label { get; set; }
        public string Value { get; set; }
    }
}
