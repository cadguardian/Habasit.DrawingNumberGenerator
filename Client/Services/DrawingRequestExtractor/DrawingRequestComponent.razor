@using DNG.Library.Data
@using DNG.Library.Services

@inject DrawingRequestExtractorService ExtractorService

<div class="container">
    <h2>Extract Drawing Request from Email</h2>

    <DrawingRequestInstruction />

    <label class="text-muted" for="emailContent">Sugar CRM Drawing Request Input</label>

    <textarea id="emailContent" @bind="EmailContent" rows="10" placeholder="Paste email content here..." class="col-12"></textarea>
    
    <button @onclick="ExtractEmailData">Extract Data</button>

    @if (DrawingRequest != null)
    {
         <div class="small mt-4">@((MarkupString)DrawingRequest.ToString()!)</div>
    }

    @if (ErrorMessage != null)
    {
        <div class="error-message">
            <p><strong>Error:</strong> @ErrorMessage</p>
        </div>
    }
</div>

<hr />

@code {
    private DrawingRequest? DrawingRequest { get; set; }
    private string EmailContent { get; set; } = string.Empty;
    private string? ErrorMessage { get; set; } = null;

    private void ExtractEmailData()
    {
        try
        {
            if (string.IsNullOrWhiteSpace(EmailContent))
            {
                ErrorMessage = "Email content cannot be empty.";
                return;
            }

            DrawingRequest = ExtractorService.ExtractDrawingRequestFromEmail(EmailContent);
            ErrorMessage = null;  // Clear previous errors
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred while extracting the drawing request: {ex.Message}";
        }
    }
}
