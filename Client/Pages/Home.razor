@page "/"

@using Client.Features.DWGManager
@using Client.Features.EngineeringManager
@using Client.Features.Serialization
@using Client.Features.ThumbnailGallery
@using Client.Features.TitleBlockGenerator
@using Client.Services
@using DNG.Library.Data
@using DNG.Library.Models
@using Microsoft.AspNetCore.Components.Forms

@inject IJSRuntime JSRuntime
@inject IDrawingNumber DrawingNumber
@inject IDrawingRequest DrawingRequest
@inject IDrawingRequestProcessor DrawingRequestProcessor
@inject IDrawingRequestProcessor DrawingRequestProcessor

<PageTitle>Drawings | Plastic Modular Belt</PageTitle>

<ShowInstructionsComponent />

<ProjectPrintSummary />

<EditForm EditContext="editContext" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <DWGRequestForm />
</EditForm>


<label class="small alert alert-warning my-4 no-print">
    Locate parts for your parts list.
</label>

<MaterialView />

<label class="small alert alert-warning my-4 no-print">
    Quickly find CAD templates.
</label>


<CADLibraryView/>

<label class="small alert alert-warning my-4 no-print">
    Use Query String to find drawings instantly.
</label>

<DWGManagerView/>


@* <CADWorkflow /> *@

 @* <AutoCADCommands /> *@

@* <FeatureManagerView /> *@

<label class="small alert alert-warning my-4 no-print">
    Copy values and paste in your drawing title block.
</label>

<TitleBlockGeneratorView/>

<label class="small alert alert-warning my-4 no-print">
    Observe features of a Plastic Modular Belt.
</label>


  <ThumbnailGalleryView /> 

<label class="small alert alert-warning my-4 no-print">
    Export JSON for geek level details.
</label>

<JSONExportView />


<QuickGuide/>


@code {
    private EditContext? editContext;

    protected override void OnInitialized()
    {
        editContext = new EditContext(DrawingRequest);
        editContext.OnFieldChanged += (sender, e) => editContext.Validate(); // Triggers validation on field change

        // Immediately trigger validation when form loads
        editContext.Validate();
    }

    private void HandleValidSubmit()
    {
        DrawingRequestProcessor.GenerateDrawingNumber();
    }
}
