@page "/project-summary"
@using DNG.Library.Models
@inject IDrawingRequest DrawingRequest
@inject IDrawingNumber DrawingNumber
@inject HttpClient Http
@inject IJSRuntime JS

<div class="container-fluid">
     <div class="text-center">
        <div class="btn-group" role="group">
    <!-- Print Button (to show the summary sheet) -->
    <button class="btn btn-dark mb-3 my-4" @onclick="ShowSummarySheet">Print View</button>
        </div>
    </div>

    <!-- Summary Sheet Section (Hidden initially) -->
    <div class="summary-sheet" style="display: none;" id="summarySheet">
        <div class="text-center">
            <h1>Engineering Project Summary Sheet</h1>
        </div>
        
        <div class="alert alert-warning p-2 mb-4">
            <strong>CSR Structured Request:</strong>
            <p>@DrawingRequest.StructuredText</p>
        </div>

        <!-- MAIN SECTION: Two Columns -->
        <div class="row">
            <!-- LEFT COLUMN: Thumbnail Image and Basic Info -->
            <div class="col-6">
                <div class="card mb-3">
                    <div class="card-header">Thumbnail</div>
                    <div class="card-body d-flex align-items-center justify-content-center">
                        <img src="images/belts/@GetThumbnailImage()" alt="Belt Thumbnail" class="img-fluid p-0 m-0" />
                    </div>

                </div>
            </div>

            <!-- RIGHT COLUMN: Title Block Information -->
            <div class="col-6">
                <div class="card mb-3">
                    <div class="card-header">Title Block Information</div>
                    <div class="card-body">
                        <div><strong>Folder Name:</strong> @GetProjectFolderName()</div>
                        <div><strong>Rev Number:</strong> A</div>
                        <div><strong>Drawn Date:</strong> @DateTime.Now.ToString("MM/dd/yyyy")</div>
                        <div><strong>Scale:</strong> N/A</div>
                        <div><strong>Drawn By:</strong> T Smith</div>
                        <div><strong>Job Number:</strong> @GetJobNumber()</div>
                        <div><strong>Drawing Number:</strong> @DrawingNumber.GetDrawingNumber()</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- DRAWING REQUEST SUMMARY TABLE -->
        <div class="table-responsive mb-4">
            <table class="table table-sm table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th>Attribute</th>
                        <th>Drawing Request</th>
                        <th>Drawing Code</th>
                    </tr>
                </thead>
                <tbody>
                    <tr><td>Type</td><td>@DrawingRequest.BeltType</td><td>@DrawingNumber.BeltTypeCode</td></tr>
                    <tr><td>Series</td><td>@DrawingRequest.BeltSeries</td><td>@DrawingNumber.BeltSeriesCode</td></tr>
                    <tr><td>Color</td><td>@DrawingRequest.Color</td><td>@DrawingNumber.ColorCode</td></tr>
                    <tr><td>Material</td><td>@DrawingRequest.Material</td><td>@DrawingNumber.MaterialCode</td></tr>
                    <tr><td>Adder Material</td><td>@DrawingRequest.AdderMaterial</td><td>@DrawingNumber.AdderMaterialCode</td></tr>
                    <tr><td>Rod</td><td>@DrawingRequest.RodMaterial</td><td>@DrawingNumber.RodMaterialCode</td></tr>
                    <tr><td>Belt Width</td><td>@DrawingRequest.BeltWidth</td><td>@DrawingNumber.BeltWidthCode</td></tr>
                    <tr><td>Flights Rollers Grip</td><td>@DrawingRequest.FlightsRollersGrip</td><td>@DrawingNumber.FlightsRollersGripsCode</td></tr>
                    <tr><td>Qty Rollers Width</td><td>@DrawingRequest.QtyRollersAcrossWidth</td><td>@DrawingNumber.QtyRollersAcrossWidth</td></tr>
                    <tr><td>FRG Centers</td><td>@DrawingRequest.FRGCenters</td><td>@DrawingNumber.FRGCenters</td></tr>
                    <tr><td>Belt Accessories</td><td>@DrawingRequest.BeltAccessories</td><td>@DrawingNumber.BeltAccessoriesCode</td></tr>
                    <tr><td>Friction/Anti Static</td><td>@DrawingRequest.FrictionAntiStatic</td><td>@DrawingNumber.FrictionAntiStaticCode</td></tr>
                    <tr><td>Side-PL/Lane-DV</td><td>@DrawingRequest.SidePLLaneDV</td><td>@DrawingNumber.SidePLLaneDVCode</td></tr>
                    <tr><td>Unique ID</td><td>@DrawingRequest.UniqueIdentification</td><td>@DrawingNumber.UniqueIdentification</td></tr>
                    <tr><td>Indent Code</td><td>@DrawingRequest.IndentCode</td><td>@DrawingNumber.IndentCode</td></tr>
                </tbody>
            </table>
        </div>

        <!-- RECOMMENDED FILES SECTION -->
        <div class="row mb-4">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">Recommended CAD Template</div>
                    <div class="card-body">
                        <a href="@DrawingRequest.CadTemplatePath" target="_blank">@DrawingRequest.CadTemplatePath</a>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header">Recommended Reference Drawing</div>
                    <div class="card-body">
                        <a href="@DrawingRequest.ReferenceDrawingPath" target="_blank">@DrawingRequest.ReferenceDrawingPath</a>
                    </div>
                </div>
            </div>
        </div>

        <!-- PARTS LIST SECTION -->
        <div class="table-responsive">
            <table class="table table-sm table-bordered">
                <thead class="table-dark">
                    <tr>
                        <th>Part Name</th>
                        <th>Description</th>
                        <th>Quantity</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var part in DrawingRequest.PartsList)
                    {
                        <tr>
                            <td>@part.Key</td>
                            <td>@part.Value</td>
                            <td><input type="number" class="form-control form-control-sm" placeholder="Qty" /></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Back Button -->
        <button class="btn btn-secondary mt-4" @onclick="HideSummarySheet">Hide Print View</button>
    </div>
</div>

@code {
    private List<string> imageFiles = new();

    private string searchQuery; 

    protected override async Task OnInitializedAsync()
    {
        imageFiles = await Http.GetFromJsonAsync<List<string>>("images/belts/images.json");
        Console.WriteLine($"{imageFiles.Count} belt images found.");
    }

    private IEnumerable<string> FilteredImages => imageFiles
        .Where(img => img.Contains(searchQuery, StringComparison.OrdinalIgnoreCase));

    private void ShowSummarySheet()
    {
        ApplyFilters();
        JS.InvokeVoidAsync("toggleSummarySheet", true);
    }

    private void HideSummarySheet()
    {
        ApplyFilters();
        JS.InvokeVoidAsync("toggleSummarySheet", false);
    }

    private void ApplyFilters()
    {
        // Update searchQuery based on filter criteria, for example:
        searchQuery = !string.IsNullOrWhiteSpace(DrawingRequest.BeltType) ? DrawingRequest.BeltSeries : string.Empty;
    }

    private string GetThumbnailImage() => FilteredImages.FirstOrDefault()!;
    private string GetJobNumber() => !string.IsNullOrWhiteSpace(DrawingRequest.SalesOrderNumber) ? $"SO{DrawingRequest.SalesOrderNumber}" :
                                      !string.IsNullOrWhiteSpace(DrawingRequest.PurchaseOrderNumber) ? $"PO{DrawingRequest.PurchaseOrderNumber}" :
                                      !string.IsNullOrWhiteSpace(DrawingRequest.QuoteNumber) ? $"Q{DrawingRequest.QuoteNumber}" : "N/A";
    private string GetProjectFolderName() => $"{GetJobNumber()} - {DrawingNumber.BeltTypeCode}{DrawingNumber.BeltSeriesCode}";
    private string GetTitleLine1() => $"{DrawingNumber.BeltTypeCode}{DrawingRequest.BeltSeries} {DrawingRequest.BeltType} {DrawingRequest.Color} {DrawingRequest.Material} {DrawingRequest.BeltWidth}in WIDE ({DrawingRequest.NumberOfLinks}L)".ToUpper();
    private string GetTitleLine2() => $"{DrawingRequest.FlightsRollersGrip} {DrawingRequest.FRGCenters}IN SPACING".ToUpper();
    private string GetTitleLine3() => !string.IsNullOrWhiteSpace(DrawingRequest.IndentCode) ? $"{DrawingRequest.IndentCode} IN INDENT {DrawingRequest.RodMaterial}".ToUpper() : "";
}
