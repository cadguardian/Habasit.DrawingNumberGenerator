@page "/part-numbers"
@inject IPartNumberService PartNumberService
@inject IDrawingRequest drawingRequest

@code {
    
    private string universalSearch = string.Empty;
    private IEnumerable<KeyValuePair<string, string>> PartNumbers { get; set; }

    private bool isLoading = true;
    private string errorMessage = string.Empty;
    private bool isSortedAsc = true;
    private string currentSortColumn = "PartNumber";

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var csvFilePath = "Data/partNumbers.csv";
            var fullPath = Path.Combine(Directory.GetCurrentDirectory(), csvFilePath);

            // Initialize the service (loads data from CSV)
            await PartNumberService.InitializeAsync(fullPath);
            PartNumbers = PartNumberService.FilterPartNumbers(drawingRequest);
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void ApplyFilters()
    {
        PartNumbers = PartNumberService.FilterPartNumbers(drawingRequest, universalSearch);
    }

    private void ToggleSort()
    {
        isSortedAsc = !isSortedAsc;
        PartNumbers = isSortedAsc
            ? PartNumbers.OrderBy(p => p.Key)
            : PartNumbers.OrderByDescending(p => p.Key);
    }
}

<div class="alert alert-secondary mt-4" role="alert">
    After completing the form click the filter button to view parts that meet specific requirements. You can further refine your results using the search bar. If the form above is left blank, you can perform an unrestricted search using only the search bar.
</div>

<div class="container mt-4">
    <div class="input-group mb-3">
        <span class="input-group-text" data-bs-toggle="tooltip3">
            <div class="form-floating">
                <button class="btn btn-warning" @onclick="ApplyFilters">Filter</button>
            </div>
        </span>
        <div class="form-floating">
            <input id="universalSearch" @bind="universalSearch" @oninput="ApplyFilters" class="form-control" placeholder="Search..." />
            <label for="material">Part Search</label>
        </div>

        <span class="input-group-text bg-dark text-light" data-bs-toggle="tooltip3">
            <div class="form-floating">
            </div>  @PartNumbers?.Count() Parts
        </span>
    </div>
    
    <div>
    <span class="badge text-bg-primary">Modules</span>
        <span class="badge text-bg-warning">Flights</span>
        <span class="badge text-bg-danger">Side Guards</span>
        <span class="badge text-bg-dark">Sprockets</span>
        <span class="badge text-bg-success">Chains</span>
        <span class="badge text-bg-info">Rods</span>
    </div>
    @if (isLoading)
    {
        <div class="text-center">
            <div class="spinner-border" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
        </div>
    }
    else if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">@errorMessage</div>
    }
    else if (PartNumbers == null || !PartNumbers.Any())
    {
        <div class="alert alert-warning">No data loaded.</div>
    }
    else
    {
        <table class="table table-sm table-hover table-responsive-sm" style="font-size: 0.8em;">
            <thead>
                <tr>
                    <th @onclick="ToggleSort" style="cursor: pointer;">
                        Part Number
                        <span>@(isSortedAsc ? "▲" : "▼")</span>
                    </th>
                    <th>Description</th>
                    @* <th>Quantity</th> *@
                </tr>
            </thead>
            <tbody>
                @foreach (var part in PartNumbers)
                {
                    <tr>
                        @if (part.Value!.ToLower().Contains("module"))
                        {
                            <td>
                                <div class="alert alert-primary mb-0 p-0 text-center" role="alert">
                           @part.Key
                                </div>
                            </td>
                        }
                        else if (part.Value!.ToLower().Contains("flight"))
                        {
                            <td>
                                <div class="alert alert-warning mb-0 p-0 text-center" role="alert">
                                    @part.Key
                                </div>
                            </td>
                        }
                        else if (part.Value!.ToLower().Contains("sideguard"))
                        {
                            <td>
                                <div class="alert alert-danger mb-0 p-0 text-center" role="alert">
                                    @part.Key
                                </div>
                            </td>
                        }
                        else if (part.Value!.ToLower().Contains("sprocket"))
                        {
                            <td>
                                <div class="alert alert-dark mb-0 p-0 text-center" role="alert">
                                    @part.Key
                                </div>
                            </td>
                        }
                        else if (part.Value!.ToLower().Contains("chain"))
                        {
                            <td>
                                <div class="alert alert-success mb-0 p-0 text-center" role="alert">
                                    @part.Key
                                </div>
                            </td>
                        }
                        else if (part.Value!.ToLower().Contains("rod"))
                        {
                            <td>
                                <div class="alert alert-info mb-0 p-0 text-center" role="alert">
                                    @part.Key
                                </div>
                            </td>
                        }
                        else
                        {
                            <td>@part.Key</td>
                        }
                        
                        <td>@part.Value</td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
