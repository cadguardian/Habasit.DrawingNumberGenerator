
@using Microsoft.AspNetCore.Components.Forms
@using System.Text.Json
@using System.Text
@inject IJSRuntime JSRuntime

<div class="container-fluid my-4">
    <div class="card p-4 shadow">
        <InputGroupTitle Title="Drawing Request Management"
                         Subtitle="Import & Export Functionality"
                         Description="Easily upload and download drawing requests in JSON format. Use these functions to save, load, modify, and compare your drawing requests for efficient management." />

        <!-- Import Drawing Request Section -->
        <div class="mb-4">
            <h5 class="text-dark fw-bold">Import Drawing Request</h5>
            <InputFile OnChange="HandleFileSelected" class="form-control" />
            <p class="text-muted mt-2">Select a JSON file to import your drawing request. Ensure the file format is correct for seamless integration.</p>
        </div>

        <!-- Download Drawing Request Button -->
        <div class="text-center mb-4">
            <button class="btn btn-success btn-lg" @onclick="DownloadJson">Download Current Request</button>
            <p class="text-muted mt-2">Click the button to download your current drawing request as a JSON file.</p>
        </div>
    </div>
</div>

@code {
    private DrawingRequest? currentRequest;

    private async Task HandleFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            using var stream = new MemoryStream();
            await file.OpenReadStream().CopyToAsync(stream);
            var jsonString = Encoding.UTF8.GetString(stream.ToArray());

            // Deserialize JSON to DrawingRequest object
            currentRequest = JsonSerializer.Deserialize<DrawingRequest>(jsonString)!;

            if (currentRequest == null)
            {
                await JSRuntime.InvokeVoidAsync("alert", "Failed to load drawing request. Please check the file format.");
            }
            else
            {
                // Optional: Perform additional actions with the loaded request here
            }
        }
    }

    private async Task DownloadJson()
    {
        if (currentRequest != null)
        {
            var jsonString = JsonSerializer.Serialize(currentRequest);
            var fileName = "drawing_request.json";

            // Trigger download using JavaScript
            await JSRuntime.InvokeVoidAsync("downloadFile", fileName, jsonString);
        }
        else
        {
            await JSRuntime.InvokeVoidAsync("alert", "No current request to download. Please import a request first.");
        }
    }
}

<style>
    .card {
        border-radius: 8px; /* Rounded corners for a modern look */
        background-color: #ffffff; /* Clean background for clarity */
    }

    .btn {
        transition: background-color 0.3s, transform 0.2s; /* Smooth transitions */
    }

    .btn:hover {
        background-color: #28a745; /* Slightly darker green on hover */
        transform: scale(1.05); /* Slight zoom on hover */
    }

    .text-dark {
        font-weight: bold;
    }

</style>
