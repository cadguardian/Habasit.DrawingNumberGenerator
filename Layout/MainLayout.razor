@using DNG.Library.Models
@inject IJSRuntime JSRuntime

@inherits LayoutComponentBase
@inject IDrawingNumber DrawingNumber
<div class="conveyor-belt">
    <div class="belt-pattern"></div>
</div>
<div class="page d-flex flex-column min-vh-100">

    <main class="flex-grow-1">
        <div class="container-fluid bg-light">
            <nav class="navbar navbar-expand-lg navbar-dark bg-dark border-bottom fixed-top">
                <div class="container-fluid">
                    <a class="navbar-brand small" href="#">
                        <small class="mb-0">Habasit America <small class="text-success"> Suwanee, GA</small></small>
                    </a>
                    


                    <div class="d-flex ms-auto">
                        <small class="text-center text-warning">Drawing Tools</small>
                    </div>
                </div>
            </nav>

            <ul class="nav justify-content-center nav-underline  small gap-4">
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" href="#">Home</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="https://portal.habasit.com/view/v_portal_pmb" target="_blank">Product Portal</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="https://oursharedarea.sharepoint.com/sites/HabaWeb/SitePages/Plastics-and-Chains.aspx" target="_blank">Product Number Codes</a>
                </li>
            </ul>

        </div>

        <div class="content-wrapper d-flex flex-column" style="max-width: 700px; margin: 0 auto;">
            
            <!-- Main Content (scrollable if necessary) -->
            <article style="overflow-y: auto; flex-grow: 1;">
                @Body
            </article>
        </div>
    </main>
</div>


<!-- Fixed Footer at the bottom of the screen -->
<footer class="container-fluid bg-dark py-1 fixed-bottom">
    
    <div class="row mb-3 justify-content-center">
        <!-- Drawing Number and Query Switch -->
        <div class="col-10 d-flex align-items-center">
            <div class="card-body d-flex justify-content-between align-items-center">
                <label class="form-check-label me-3">Drawing Number</label>
                <div class="form-check form-switch">
                    <input class="form-check-input" type="checkbox" id="toggleQueryString" @bind="showQueryString" />
                </div>
                <label class="form-check-label ms-3">Query String</label>
            </div>
        </div>
    </div>

    <h2 class="copy-button text-center text-warning">
        <button class="btn btn-warning btn-sm" @onclick="CopyDrawingNumberToClipboard">
            <i class="bi bi-arrow-clockwise"></i> @(string.IsNullOrEmpty(GetDisplayValue()) ? "Generate" : GetDisplayValue())
        </button>
    </h2>

    <div id="copyDialog" class="text-warning" style="display: none;">
        Drawing number copied to clipboard!
    </div>

    <blockquote class="text-center mb-0">
        <p class="small mb-0">"Simplifying special build drawing delivery!"</p>
    </blockquote>

    <div class="text-center">
        <a href="mailto:thomas.smith@habasit.com" class="text-light small" style="text-decoration: underline;">thomas.smith@habasit.com</a>
    </div>


</footer>
@code{
    private bool showQueryString = false;


    private string GetDisplayValue()
    {
        var result = showQueryString ? DrawingNumber.GetDrawingQueryString() : DrawingNumber.GetDrawingNumber();
        return result;
    }

    private async Task CopyDrawingNumberToClipboard()
    {
        var drawingNumber = GetDisplayValue();  // Assuming this is the method that generates the drawing number.
        await JSRuntime.InvokeVoidAsync("CopyDrawingNumber", drawingNumber);
    }
}