PRAGMA foreign_keys = ON;  -- Enable foreign key constraints

-- Drop tables if they exist (SQLite style)
DROP TABLE IF EXISTS BeltData;
DROP TABLE IF EXISTS BeltTypeCodes;
DROP TABLE IF EXISTS BeltSeriesCodes;
DROP TABLE IF EXISTS ColorCodes;
DROP TABLE IF EXISTS MaterialCodes;
DROP TABLE IF EXISTS AdderMaterialCodes; -- New lookup table
DROP TABLE IF EXISTS RodMaterialCodes; -- New lookup table
DROP TABLE IF EXISTS BeltWidths; -- New table for values
DROP TABLE IF EXISTS FlightsRollersGripsCodes;
DROP TABLE IF EXISTS BeltAccessoriesCodes;
DROP TABLE IF EXISTS FrictionAntiStaticCodes;
DROP TABLE IF EXISTS SidePLLaneDVCodes;
DROP TABLE IF EXISTS IndentCodes;
DROP TABLE IF EXISTS JobNumbers;
DROP TABLE IF EXISTS Users;  -- Assuming you have a Users table
DROP TABLE IF EXISTS Customers; -- Assuming you have a Customers table
DROP TABLE IF EXISTS ProcessSteps;
DROP TABLE IF EXISTS BeltParts;

-- Lookup Tables (Codes)
CREATE TABLE BeltTypeCodes (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    BeltTypeCode TEXT UNIQUE NOT NULL,
    Value TEXT NOT NULL
);

CREATE TABLE BeltSeriesCodes (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    BeltSeriesCode TEXT UNIQUE NOT NULL,
    Value TEXT NOT NULL
);

CREATE TABLE ColorCodes (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    ColorCode TEXT UNIQUE NOT NULL,
    Value TEXT NOT NULL
);

CREATE TABLE MaterialCodes (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    MaterialCode TEXT UNIQUE NOT NULL,
    Value TEXT NOT NULL
);

CREATE TABLE AdderMaterialCodes ( -- New lookup table
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    AdderMaterialCode TEXT UNIQUE NOT NULL,
    Value TEXT NOT NULL
);

CREATE TABLE RodMaterialCodes ( -- New lookup table
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    RodMaterialCode TEXT UNIQUE NOT NULL,
    Value TEXT NOT NULL
);

CREATE TABLE FlightsRollersGripsCodes (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    FlightsRollersGripsCode TEXT UNIQUE NOT NULL,
    Value TEXT NOT NULL
);

CREATE TABLE BeltAccessoriesCodes (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    BeltAccessoriesCode TEXT UNIQUE NOT NULL,
    Value TEXT NOT NULL
);

CREATE TABLE FrictionAntiStaticCodes (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    FrictionAntiStaticCode TEXT UNIQUE NOT NULL,
    Value TEXT NOT NULL
);

CREATE TABLE SidePLLaneDVCodes (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    SidePLLaneDVCode TEXT UNIQUE NOT NULL,
    Value TEXT NOT NULL
);

CREATE TABLE IndentCodes (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    IndentCode TEXT UNIQUE NOT NULL,
    Value TEXT NOT NULL
);

-- Tables for Values (Not Codes)
CREATE TABLE BeltWidths ( -- New table for values
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    BeltWidth REAL UNIQUE NOT NULL -- Store the width value here
);

-- Job Numbers Table
CREATE TABLE JobNumbers (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    JobNumber TEXT UNIQUE NOT NULL
);

-- Users Table (Assumed - Adapt as needed)
CREATE TABLE Users (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    Username TEXT UNIQUE NOT NULL
    -- Add other user-related columns
);

-- Customers Table (Assumed - Adapt as needed)
CREATE TABLE Customers (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    CustomerName TEXT NOT NULL
    -- Add other customer-related columns
);

-- Process Steps Table
CREATE TABLE ProcessSteps (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    ProcessStep TEXT UNIQUE NOT NULL
);

-- Belt Parts Table
CREATE TABLE BeltParts (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    PartName TEXT NOT NULL
    -- Add other part-related columns as needed
);

-- Main Belt Data Table
CREATE TABLE BeltData (
    ID INTEGER PRIMARY KEY AUTOINCREMENT,
    BeltTypeCode INTEGER NOT NULL REFERENCES BeltTypeCodes(ID),
    BeltSeriesCode INTEGER NOT NULL REFERENCES BeltSeriesCodes(ID),
    ColorCode INTEGER NOT NULL REFERENCES ColorCodes(ID),
    MaterialCode INTEGER NOT NULL REFERENCES MaterialCodes(ID),
    AdderMaterialCode INTEGER NOT NULL REFERENCES AdderMaterialCodes(ID),  -- Corrected foreign key
    RodMaterialCode INTEGER NOT NULL REFERENCES RodMaterialCodes(ID),  -- Corrected foreign key
    BeltWidth REAL NOT NULL REFERENCES BeltWidths(ID), -- Corrected: value, not code
    FlightsRollersGripsCode INTEGER NOT NULL REFERENCES FlightsRollersGripsCodes(ID),
    QtyRollersAcrossWidth REAL CHECK (QtyRollersAcrossWidth <= 256),
    FRGCenters REAL CHECK (FRGCenters <= 256),
    BeltAccessoriesCode INTEGER NOT NULL REFERENCES BeltAccessoriesCodes(ID),
    FrictionAntiStaticCode INTEGER NOT NULL REFERENCES FrictionAntiStaticCodes(ID),
    SidePLLaneDVCode INTEGER NOT NULL REFERENCES SidePLLaneDVCodes(ID),
    UniqueIdentification TEXT,
    IndentCode INTEGER NOT NULL REFERENCES IndentCodes(ID),
    JobNumber INTEGER NOT NULL REFERENCES JobNumbers(ID),
    ThumbnailImage BLOB,  -- Or TEXT for file path
    CreatedDate TEXT DEFAULT (DATETIME('now')),  -- SQLite timestamp
    SugarCRMLink TEXT,
    CADTemplateFilepath TEXT,
    DWGFilepath TEXT,
    PDFFilepath TEXT,
    Revision TEXT,
    TitleBlockLine1 TEXT,
    TitleBlockLine2 TEXT,
    TitleBlockLine3 TEXT,
    Drafter INTEGER NOT NULL REFERENCES Users(ID),  -- Corrected foreign key
    PartsList INTEGER NOT NULL REFERENCES BeltParts(ID),
    CurrentProcessStep INTEGER NOT NULL REFERENCES ProcessSteps(ID),
    ApprovedCustomerName INTEGER NOT NULL REFERENCES Customers(ID),
    ServerFolder TEXT,
    ActualWidthNominal REAL,
    NumberOfLinks REAL,
    EdgeCut INTEGER,  -- 0 or 1 for boolean
    ModularVsMachinedIndent TEXT,
    MinGapVsStandardGap TEXT,
    FTPVsFTM TEXT,
    ComplexityLevel INTEGER
);

-- Add sample data to lookup tables (replace with your actual data)
INSERT INTO BeltTypeCodes (BeltTypeCode, Value) VALUES ('TypeA', 'Type A Belt'), ('TypeB', 'Type B Belt');
-- ... (Add other lookup table data)

-- Add sample data to JobNumbers table
INSERT INTO JobNumbers (JobNumber) VALUES ('JOB0001'), ('JOB0002');

-- Add sample data to Users table (replace with your actual data)
INSERT INTO Users (Username) VALUES ('johndoe'), ('janedoe');

-- Add sample data to Customers table (replace with your actual data)
INSERT INTO Customers (CustomerName) VALUES ('Acme Corp'), ('Beta Industries');

-- Add sample data to ProcessSteps table
INSERT INTO ProcessSteps (ProcessStep) VALUES ('Order Received'), ('Design Started'), ('Drawing Complete');

-- Add sample data to BeltParts table
INSERT INTO BeltParts (PartName) VALUES ('PartA'), ('PartB'); -- Example part names

-- Sample data for new lookup tables (replace with your actual data)
INSERT INTO AdderMaterialCodes (AdderMaterialCode, Value) VALUES ('AM1', 'Adder Material 1'), ('AM2', 'Adder Material 2');
INSERT INTO RodMaterialCodes (RodMaterialCode, Value) VALUES ('RM1', 'Rod Material 1'), ('RM2', 'Rod Material 2');

-- Sample data for BeltWidths table
INSERT INTO BeltWidths (BeltWidth) VALUES (10.0), (15.0), (20.0);